Octotree - GitHub code tree - расширение для chrome для работы на github (слева открывается при наведении)

http://192.168.0.186:3000 - для телефона

Сначала нужно создать репрзиторий на GitHub, потом привязать к нашему проекту:
Способ 1) Для создания репозитория через систему управления
          Нажимаем на систему управлениями версиями (Ctrl+Shift+G) =>
          => Инициализировать репозиторий => выбераем наш проект => 
					  => На вкладке изменения жмем "+" и добавляем изменения (вкладка вверху) =>
					  => На вкладке "Система управления версиями" жмем галочку (делаем коммит) =>
					  => В терминале:
git config --global user.name "Oleh Yefimenko"
git config --global user.email "oleh.yefimenko@gmail.com"
git remote add origin https://github.com/oleh-yefimenko/_help_code.git
git branch -M main
(не забываем сделать коммит)
git push -u origin main
Потом при работе
git push origin 'название ветки' - чтобы загрузить ветку на GitHub

(вроде уже не нужно) строчка ниже
git config --global core.autocrlf true                                                 !- для Windows обязательно (вроде уже не нужно)
---------------------------------------------------------------------------------------------------------------------------------------
Способ 2) Без системы управления версиями (ветки git слева на боковой панели)
          git init
          git add README.md
          git commit -m "first commit"
          git branch -M main
          git remote add origin https://github.com/oleh-yefimenko/_help_code.git
          git push -u origin main
----------------------------------------------------------------------------------------------------------------------------------------

===> Команды GIT <===
---> Слияние ветки в ветку main
git checkout main
git merge 'название ветки'

скачать ветку с github 
заходим в github на наш сайт, открываем зеленую кнопку CODE и копируем ссылку сайта
заходим в папку, куда хотим запулить проэкт и открываем там терминал
git clone ссылка на сайт                                                               !- скачует ветку master 
git pull origin название ветки                                                         !- переход на нужную ветку

git push origin --delete <branchName> - удаление ветки с сайта GitHub 

---> основные команды
clear - почистить консоль
q - выход 
git status                                                          !- (проверка состояния файлов. Если фыйлы красные – значитони не отслеживаемые. И показывает изминения файлов)
git add .                                                           !- дотавить все папки и файлы в отслежуемые
git commit -a –m ‘описание коммита’
git diff                                                            !- проверить какие изменения были 
git log                                                             !- проверить историю коммитов 
git checkout index.html                                             !- откат одного файла к придыдущему коммиту, так же можно востановить удаленный файл или папку 
git checkout style/stlyles.css                                      !- так востанавливается папка с файлом
git log --oneline                                                   !- увидеть все коммиты этой ветки в удобной форме
git checkout ХЕШ коммита (можно добавить еще конкретный файл)       !- вернуться к ккомиту, все коммиты после него удалятся                                 
git checkout master                                                 !- вернтуться обратно и коммиты востановятся
git checkout -b название ветки                                      !- создание новой ветки от данного коммита
git log --oneline --all                                             !- увидить все комметы одной ветки 
git log --oneline --all --graph                                     !- увидить все ветки дерева коммитов
git branch -d название ветки                                        !- удалить ветку

[alias]
(ссылка на сайт https://githowto.com/ru/aliases)
git config --global alias.hist "log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short" - команда создания alias коммитов "hist" 

Красивое дерево
git log --pretty=format:"%h %s" --graph                             (коммиты без названий веток)
git log --graph --pretty=oneline --abbrev-commit --all --decorate   (коммиты с названием веток)

Горячие клавиши
q - выход с команды
clear - очистить все